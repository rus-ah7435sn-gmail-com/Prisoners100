<Window x:Class="PrisonersDilemma.Wpf.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:viewModels="clr-namespace:PrisonersDilemma.Wpf.ViewModels"
        xmlns:local="clr-namespace:PrisonersDilemma.Wpf.Views"
        mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True" 
        d:DataContext="{d:DesignInstance viewModels:MainViewModel, IsDesignTimeCreatable=True}"
        Title="Симулятор Дилеммы Заключенных (100 Prisoners Riddle)" Height="768" Width="1024">
    <Window.Resources>
        <Style TargetType="TextBlock" x:Key="LabelStyle">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
        </Style>
        <Style TargetType="TextBox" x:Key="InputTextBoxStyle">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

        <!-- Стиль для отображения коробки -->
        <DataTemplate x:Key="BoxDataTemplate" DataType="{x:Type viewModels:BoxViewModel}">
            <Border BorderThickness="1" BorderBrush="Black" Margin="2" Padding="5" MinWidth="60" MinHeight="60"
                    ToolTip="{Binding PrisonerNumberInside, StringFormat='Внутри: {0}'}">
                <Border.Background>
                    <SolidColorBrush Color="{Binding IsBeingChecked, Converter={StaticResource BoolToColorConverter}, ConverterParameter='Yellow:LightGray'}"/>
                </Border.Background>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="{Binding BoxNumber}" FontWeight="Bold" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding PrisonerNumberInside}" FontSize="10" HorizontalAlignment="Center"
                               Visibility="{Binding IsOpened, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <!-- Отображение найденного номера зеленым цветом -->
                    <TextBlock Text="{Binding PrisonerNumberInside}" FontSize="10" HorizontalAlignment="Center"
                               Foreground="Green" FontWeight="Bold"
                               Visibility="{Binding ContainsMatchingNumber, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </Border>
        </DataTemplate>

        <!-- Конвертеры -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:BoolToColorConverter x:Key="BoolToColorConverter" />
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Параметры и управление -->
            <RowDefinition Height="Auto"/> <!-- Статус и результат -->
            <RowDefinition Height="*"/>    <!-- Коробки -->
            <RowDefinition Height="Auto"/> <!-- Разделитель -->
            <RowDefinition Height="200"/>  <!-- Логи -->
        </Grid.RowDefinitions>

        <!-- Панель параметров и управления -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
            <TextBlock Text="Количество заключенных:" Style="{StaticResource LabelStyle}"/>
            <TextBox Text="{Binding NumberOfPrisoners, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource InputTextBoxStyle}" IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"/>
            <TextBlock Text="Макс. попыток:" Style="{StaticResource LabelStyle}"/>
            <TextBox Text="{Binding MaxAttemptsPerPrisoner, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource InputTextBoxStyle}" IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"/>
            <Button Content="Запустить симуляцию" Command="{Binding RunSimulationCommand}"/>
        </StackPanel>

        <!-- Статус и результат -->
        <StackPanel Grid.Row="1" Margin="0,0,0,10">
            <TextBlock Text="Статус:" FontWeight="Bold"/>
            <TextBlock Text="{Binding SimulationStatus}" Margin="0,0,0,5" TextWrapping="Wrap"/>
            <TextBlock Text="Результат:" FontWeight="Bold"/>
            <TextBlock Text="{Binding SimulationResult}" TextWrapping="Wrap"/>
        </StackPanel>
        
        <!-- Область для отображения коробок -->
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding BoxesToDisplay}" ItemTemplate="{StaticResource BoxDataTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>

        <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" Background="DarkGray" VerticalAlignment="Center"/>

        <!-- Область для отображения логов -->
        <GroupBox Grid.Row="4" Header="Логи симуляции" Margin="0,5,0,0">
            <ListBox ItemsSource="{Binding SimulationLogMessages}" BorderThickness="0" HorizontalContentAlignment="Stretch">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" TextWrapping="Wrap"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </GroupBox>
    </Grid>
</Window>
